import { Component } from '@angular/core';
import { RouterLink } from '@angular/router';
import { ProgressBarComponent } from '../../../ui/progress-bar/progress-bar.component';
import { BreadcrumbComponent, BreadcrumbItem } from '../../../ui/breadcrumb/breadcrumb.component';
import { SectionNavigationComponent, NavigationSection } from '../../../ui/section-navigation/section-navigation.component';

export interface Tool {
  name: string;
  type: string;
  description: string;
  features: string[];
  bestFor: string[];
  link: string;
  icon: string;
}

@Component({
  selector: 'app-tools',
  imports: [RouterLink, ProgressBarComponent, BreadcrumbComponent, SectionNavigationComponent],
  templateUrl: './tools.component.html',
  styleUrls: ['./tools.component.css']
})
export class ToolsComponent {
  breadcrumbItems: BreadcrumbItem[] = [
    { label: 'Inicio', path: '/' },
    { label: '¬øQu√© es la IA?', path: 'what-is-ia' },
    { label: 'Prompt Engineering', path: 'prompt-engineering' },
    { label: 'Herramientas' }
  ];

  // Secciones para navegaci√≥n
  sections: NavigationSection[] = [
    { id: 'introduccion', title: 'Introducci√≥n', icon: 'üõ†Ô∏è' },
    { id: 'estadisticas', title: 'Estad√≠sticas', icon: 'üìä' },
    { id: 'filtros', title: 'Filtros', icon: 'üîç' },
    { id: 'herramientas', title: 'Herramientas', icon: 'üíª' }
  ];

  tools: Tool[] = [
    {
      name: 'ChatGPT',
      type: 'Asistente general',
      description: 'El modelo m√°s popular de OpenAI, excelente para conversaciones generales y generaci√≥n de texto.',
      features: [
        'Conversaciones naturales',
        'Generaci√≥n de c√≥digo',
        'An√°lisis de texto',
        'Traducci√≥n',
        'Res√∫menes'
      ],
      bestFor: [
        'Aprendizaje general',
        'Generaci√≥n de contenido',
        'Debugging de c√≥digo',
        'An√°lisis de documentos'
      ],
      link: 'https://chat.openai.com',
      icon: 'ü§ñ'
    },
    {
      name: 'Cursor',
      type: 'Editor de c√≥digo con IA',
      description: 'Editor de c√≥digo basado en VS Code con IA integrada para autocompletado y generaci√≥n de c√≥digo.',
      features: [
        'Autocompletado inteligente',
        'Generaci√≥n de c√≥digo',
        'Refactoring autom√°tico',
        'Debugging asistido',
        'Documentaci√≥n autom√°tica'
      ],
      bestFor: [
        'Desarrollo de software',
        'Programaci√≥n en equipo',
        'Aprendizaje de nuevos lenguajes',
        'Optimizaci√≥n de c√≥digo'
      ],
      link: 'https://cursor.sh',
      icon: 'üíª'
    },
    {
      name: 'Claude',
      type: 'IA generativa general',
      description: 'Modelo de Anthropic conocido por su razonamiento l√≥gico y an√°lisis detallado.',
      features: [
        'Razonamiento l√≥gico',
        'An√°lisis profundo',
        'Escritura creativa',
        'Resoluci√≥n de problemas',
        'An√°lisis de c√≥digo'
      ],
      bestFor: [
        'An√°lisis complejo',
        'Investigaci√≥n',
        'Escritura acad√©mica',
        'Resoluci√≥n de problemas'
      ],
      link: 'https://claude.ai',
      icon: 'üß†'
    },
    {
      name: 'Gemini',
      type: 'IA + b√∫squeda + c√≥digo',
      description: 'Modelo de Google que combina IA generativa con capacidades de b√∫squeda web.',
      features: [
        'B√∫squeda web integrada',
        'Generaci√≥n de c√≥digo',
        'An√°lisis de im√°genes',
        'Informaci√≥n actualizada',
        'Integraci√≥n con Google'
      ],
      bestFor: [
        'Investigaci√≥n actualizada',
        'An√°lisis de datos',
        'Informaci√≥n en tiempo real',
        'Desarrollo con documentaci√≥n'
      ],
      link: 'https://gemini.google.com',
      icon: 'üîç'
    },
    {
      name: 'Poe',
      type: 'Multimodelo',
      description: 'Plataforma de Quora que permite acceder a m√∫ltiples modelos de IA en un solo lugar.',
      features: [
        'M√∫ltiples modelos',
        'Comparaci√≥n de respuestas',
        'Chatbots personalizados',
        'Comunidad activa',
        'Integraci√≥n f√°cil'
      ],
      bestFor: [
        'Comparar modelos',
        'Experimentar con IA',
        'Crear chatbots',
        'Comunidad de usuarios'
      ],
      link: 'https://poe.com',
      icon: 'üåê'
    },
    {
      name: 'GitHub Copilot',
      type: 'Asistente de c√≥digo',
      description: 'Asistente de IA espec√≠ficamente dise√±ado para programadores, integrado en IDEs.',
      features: [
        'Autocompletado de c√≥digo',
        'Generaci√≥n de tests',
        'Documentaci√≥n autom√°tica',
        'Refactoring inteligente',
        'Integraci√≥n con GitHub'
      ],
      bestFor: [
        'Desarrollo profesional',
        'Equipos de desarrollo',
        'Productividad en c√≥digo',
        'Integraci√≥n con Git'
      ],
      link: 'https://github.com/features/copilot',
      icon: 'üöÄ'
    }
  ];

  selectedCategory: string = 'todos';
  categories = ['todos', 'Asistentes generales', 'Herramientas de c√≥digo', 'Multimodelo'];

  get filteredTools() {
    if (this.selectedCategory === 'todos') {
      return this.tools;
    }
    if (this.selectedCategory === 'Asistentes generales') {
      return this.tools.filter(tool => 
        tool.type.includes('general') || tool.type.includes('Asistente')
      );
    }
    if (this.selectedCategory === 'Herramientas de c√≥digo') {
      return this.tools.filter(tool => 
        tool.type.includes('c√≥digo') || tool.type.includes('Editor') || tool.name.includes('Copilot')
      );
    }
    if (this.selectedCategory === 'Multimodelo') {
      return this.tools.filter(tool => 
        tool.type.includes('Multimodelo') || tool.type.includes('b√∫squeda')
      );
    }
    return this.tools;
  }

  get assistantsCount() {
    return this.tools.filter(tool => 
      tool.type.includes('general') || tool.type.includes('Asistente')
    ).length;
  }

  get codeToolsCount() {
    return this.tools.filter(tool => 
      tool.type.includes('c√≥digo') || tool.type.includes('Editor') || tool.name.includes('Copilot')
    ).length;
  }

  get multiModelCount() {
    return this.tools.filter(tool => 
      tool.type.includes('Multimodelo') || tool.type.includes('b√∫squeda')
    ).length;
  }

  // M√©todos para el componente de navegaci√≥n
  onSectionClick(sectionId: string) {
    console.log(`Secci√≥n clickeada: ${sectionId}`);
    this.scrollToSection(sectionId);
  }

  onSectionChange(sectionId: string) {
    console.log(`Secci√≥n cambiada: ${sectionId}`);
  }

  scrollToSection(sectionId: string) {
    const element = document.getElementById(sectionId);
    if (element) {
      element.scrollIntoView({ behavior: 'smooth' });
    }
  }
} 